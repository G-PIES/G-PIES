#-----------------------------------------------------------------------------------------------------------
# MISC CONSTANTS
#-----------------------------------------------------------------------------------------------------------

PI = 3.1415926535
BOLTZMAN_CONSTANT = 8.6173 * 10^-5          # eV / Kelvin
MAX_CLUSTER_SIZE = 10



#-----------------------------------------------------------------------------------------------------------
# REACTOR PARAMETERS
#-----------------------------------------------------------------------------------------------------------

flux = 2.9 * 10^-7                          # dpa / s
temperature = 330. + 273.15                 # Degrees Kelvin
recombination = 0.3
i_bi = 0.5
i_tri = 0.2
i_quad = 0.06
v_bi = 0.06
v_tri = 0.03
v_quad = 0.02
dislocation_density_evolution = 300.



#-----------------------------------------------------------------------------------------------------------
# MATERIAL PARAMETERS
#-----------------------------------------------------------------------------------------------------------

i_migration = 0.45                          # eV
v_migration = 1.35                          # eV
i_diffusion_0 = 1 * 10^-3                   # cm^2/s
v_diffusion_0 = 0.6                         # cm^2/s
i_formation = 4.1                           # eV
v_formation = 1.7                           # eV
i_binding = 0.6                             # eV
v_binding = 0.5                             # eV
recombination_radius = 0.7 * 10^-7          # cm
i_loop_bias = 63.           
i_dislocation_bias = 0.8            
i_dislocation_bias_param = 1.1          
v_loop_bias = 33.           
v_dislocation_bias = 0.65           
v_dislocation_bias_param = 1            
dislocation_density_0 = 10 * 10^-12         
grain_size = 4 * 10^-3          
lattice_param = 3.6 * 10^-8                 # cm  
burgers_vector = lattice_param / SQRT(2)
atomic_volume = lattice_param ^ 3 / 4
i_diffusion = i_diffusion_0 * EXP( -i_migration / (BOLTZMAN_CONSTANT * temperature) )
v_diffusion = v_diffusion_0 * EXP( -v_migration / (BOLTZMAN_CONSTANT * temperature) )



#-----------------------------------------------------------------------------------------------------------
# MASTER EQUATIONS
#-----------------------------------------------------------------------------------------------------------

n = 1 .. MAX_CLUSTER_SIZE
x = 1 .. 5
d/dt Ci[n] = Gv(n) + a_i(n + 1) * Ci[n + 1] - b_i(n) * Ci[n] + c_i(n - 1) * Ci[n - 1]                                # Pokor 2a
d/dt Cv[n] = Gv(n) + a_v(n + 1) * Cv[n + 1] - b_v(n) * Cv[n] + c_v(n - 1) * Cv[n - 1]

d/dt Ci[1, x] = Gi(1) - Riv * Ci[1] * Cv[1] - i1_d_abs - i1_gb_abs - i1_cluster_abs + i1_em                          # Pokor 3a
d/dt Cv[1, x] = Gv(1) - Riv * Ci[1] * Cv[1] - v1_d_abs - v1_gb_abs - v1_cluster_abs + v1_em                          
d/dt Ci[2] = 0.0

d/dt Ci[MAX_CLUSTER_SIZE] = 0.0                                                                                      # Boundary conditions
d/dt Cv[MAX_CLUSTER_SIZE] = 0.0

d/dt Rho = 0.0 # dislocation_gain - dislocation_density_evolution * burgers_vector^2 * Rho^(3/2)


#-----------------------------------------------------------------------------------------------------------
# INITIAL STATES
#-----------------------------------------------------------------------------------------------------------

INITIAL Ci[n] = 1 * 10^-5
INITIAL Cv[n] = 1 * 10^-5
INITIAL Rho = dislocation_density_0



#-----------------------------------------------------------------------------------------------------------
# SUPPORTING EQUATIONS
#-----------------------------------------------------------------------------------------------------------

Gi(1) = flux * recombination * (1.0 - i_tri - i_quad) / atomic_volume                                             # Pokor 1a-e
Gi(2) = 0.0                                                                                                       # Divided by atomic volume for units of 1/cm^3
Gi(3) = flux * recombination * i_tri / atomic_volume                                                 
Gi(4) = flux * recombination * i_quad / atomic_volume                                                
Gi(n) = 0                                                                                            

Gv(1) = flux * recombination * (1.0 - v_bi - v_tri - v_quad) / atomic_volume                                      # Pokor 1a-e
Gv(2) = flux * recombination * v_bi / atomic_volume                                                               # Modified for vacancies
Gv(3) = flux * recombination * v_tri / atomic_volume                                                 
Gv(4) = flux * recombination * v_quad / atomic_volume                                                
Gv(n) = 0                                                                                            

a_i(n) = beta_iv(n) * Cv[1] + alpha_ii(n)                                                                         # Pokor 2b-d
b_i(n) = beta_iv(n) * Cv[1] + beta_ii(n) * Ci[1] + alpha_ii(n)
c_i(n) = beta_ii(n) * Ci[1]

a_v(n) = beta_vi(n) * Ci[1] + alpha_vv(n)                                                                         # Pokor 2b-d
b_v(n) = beta_vi(n) * Cv[1] + beta_vv(n) * Cv[1] + alpha_vv(n)
c_v(n) = beta_vv(n) * Cv[1]

i1_em = SUM(i=3 .. MAX_CLUSTER_SIZE,alpha_ii(i)*Ci[i]) + 3*alpha_ii(3)*Ci[3] + 2 * beta_iv(3)*Cv[1]*Ci[3]         # Pokor 3b
i1_cluster_abs = SUM(i=1 .. MAX_CLUSTER_SIZE,beta_ii(i)*Ci(i)) + SUM(i=2 .. MAX_CLUSTER_SIZE,beta_vi(i)*Ci[i])    # Pokor 3c
i1_d_abs = Rho * i_diffusion * i_dislocation_bias                                                                 # Pokor 3e
i1_gb_abs = 6 * i_diffusion * SQRT(Rho*i_dislocation_bias 
            + SUM(i=1 .. MAX_CLUSTER_SIZE,beta_ii(i)*Ci[i]) 
            + SUM(i=1 .. MAX_CLUSTER_SIZE,beta_vi(i)*Cv[i])) / grain_size                                         # Pokor 3f

Riv = 4 * PI * (i_diffusion + v_diffusion) * recombination_radius                                                 # Pokor 3d

v1_em = SUM(i=3 .. MAX_CLUSTER_SIZE,alpha_vv(i)*Ci[i]) + 2*alpha_vv(2)*Cv[2] + beta_vi(2)*Ci[1]*Cv[2]             # Pokor 3b (modified for vacancies)
v1_cluster_abs = SUM(i=1 .. MAX_CLUSTER_SIZE,beta_vv(i)*Cv(i)) + SUM(i=2 .. MAX_CLUSTER_SIZE,beta_iv(i)*Cv[i])    # Pokor 3c
v1_d_abs = Rho * v_diffusion * v_dislocation_bias                                                                 # Pokor 3e
v1_gb_abs = 6 * v_diffusion * SQRT(Rho*v_dislocation_bias                                                         
            + SUM(i=1 .. MAX_CLUSTER_SIZE,beta_vv(i)*Cv[i]) 
            + SUM(i=1 .. MAX_CLUSTER_SIZE,beta_iv(i)*Ci[i])) / grain_size                                         # Pokor 3f

alpha_ii(n) = 2 * PI * r(n) * i_bias_factor(n) 
              * (i_diffusion / atomic_volume) * EXP(-i_binding_energy(n)/(BOLTZMAN_CONSTANT * temperature))       # Pokor 4a
alpha_vv(n) = 2 * PI * r(n) * v_bias_factor(n) 
              * (v_diffusion / atomic_volume) * EXP(-v_binding_energy(n)/(BOLTZMAN_CONSTANT * temperature))       # Pokor 4d
beta_ii(n) = 2 * PI * r(n) * i_bias_factor(n) * i_diffusion                                                       # Pokor 4b
beta_iv(n) = 2 * PI * r(n) * v_bias_factor(n) * v_diffusion                                                       # Pokor 4c
beta_vi(n) = 2 * PI * r(n) * i_bias_factor(n) * i_diffusion                                                       # Pokor 4f
beta_vv(n) = 2 * PI * r(n) * v_bias_factor(n) * v_diffusion                                                       # Pokor 4e

i_bias_factor(n) = i_dislocation_bias + (SQRT(burgers_vector / (8 * PI * lattice_param)) 
                   - i_dislocation_bias) * (1 / (n ^ (i_dislocation_bias_param / 2)))                             # Pokor 5
v_bias_factor(n) = v_dislocation_bias + (SQRT(burgers_vector / (8 * PI * lattice_param)) 
                   - v_dislocation_bias) * (1 / (n ^ (v_dislocation_bias_param / 2)))

i_binding_energy(n) = i_formation + ((i_binding - i_formation) / (2^0.8 - 1)) * (n^0.8 - (n - 1)^0.8)             # Pokor 6
v_binding_energy(n) = v_formation + ((v_binding - v_formation) / (2^0.8 - 1)) * (n^0.8 - (n - 1)^0.8)

r(n) = SQRT(3. * lattice_param^2 * n / (4 * PI))

dislocation_gain = 0.0



#-----------------------------------------------------------------------------------------------------------
# ADDITIONAL OUTPUTS
#-----------------------------------------------------------------------------------------------------------

OUTPUT extra b_i(3)